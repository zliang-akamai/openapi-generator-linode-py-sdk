# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.post_upload_image200_response import PostUploadImage200Response

class TestPostUploadImage200Response(unittest.TestCase):
    """PostUploadImage200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostUploadImage200Response:
        """Test PostUploadImage200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostUploadImage200Response`
        """
        model = PostUploadImage200Response()
        if include_optional:
            return PostUploadImage200Response(
                image = openapi_client.models.get_images_200_response_data_inner.get_images_200_response_data_inner(
                    capabilities = ["cloud-init","distributed-sites"], 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = 'linode', 
                    deprecated = False, 
                    description = 'Example image description.', 
                    eol = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = 'linode/debian11', 
                    is_public = True, 
                    label = 'Debian 11', 
                    regions = [
                        openapi_client.models.get_images_200_response_data_inner_regions_inner.get_images_200_response_data_inner_regions_inner(
                            region = 'us-iad', 
                            status = 'available', )
                        ], 
                    size = 2500, 
                    status = 'available', 
                    tags = ["repair-image","fix-1"], 
                    total_size = 1234567, 
                    type = 'manual', 
                    updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    vendor = 'Debian', ),
                upload_to = ''
            )
        else:
            return PostUploadImage200Response(
        )
        """

    def testPostUploadImage200Response(self):
        """Test PostUploadImage200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
