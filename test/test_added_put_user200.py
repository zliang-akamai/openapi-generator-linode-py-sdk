# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.added_put_user200 import AddedPutUser200

class TestAddedPutUser200(unittest.TestCase):
    """AddedPutUser200 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddedPutUser200:
        """Test AddedPutUser200
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddedPutUser200`
        """
        model = AddedPutUser200()
        if include_optional:
            return AddedPutUser200(
                email = 'example_user@linode.com',
                last_login = openapi_client.models.added_get_user_200_all_of_last_login.added_get_user_200_allOf_last_login(
                    login_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'successful', ),
                password_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                restricted = True,
                ssh_keys = ["home-pc","laptop"],
                tfa_enabled = True,
                username = 'example_user',
                verified_phone_number = '+5555555555',
                user_type = 'parent'
            )
        else:
            return AddedPutUser200(
        )
        """

    def testAddedPutUser200(self):
        """Test AddedPutUser200"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
