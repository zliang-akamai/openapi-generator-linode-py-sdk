# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.put_object_storage_key200_response import PutObjectStorageKey200Response

class TestPutObjectStorageKey200Response(unittest.TestCase):
    """PutObjectStorageKey200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PutObjectStorageKey200Response:
        """Test PutObjectStorageKey200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PutObjectStorageKey200Response`
        """
        model = PutObjectStorageKey200Response()
        if include_optional:
            return PutObjectStorageKey200Response(
                access_key = 'KVAKUTGBA4WTR2NSJQ81',
                id = 123,
                label = 'my-key',
                limited = True,
                regions = [
                    openapi_client.models.put_object_storage_key_200_response_regions_inner.put_object_storage_key_200_response_regions_inner(
                        id = 'us-west', 
                        s3_endpoint = 'us-west-00.linodeobjects.com', )
                    ],
                secret_key = 'OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw'
            )
        else:
            return PutObjectStorageKey200Response(
        )
        """

    def testPutObjectStorageKey200Response(self):
        """Test PutObjectStorageKey200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
