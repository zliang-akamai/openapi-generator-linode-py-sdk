# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_managed_linode_settings200_response_data_inner import GetManagedLinodeSettings200ResponseDataInner

class TestGetManagedLinodeSettings200ResponseDataInner(unittest.TestCase):
    """GetManagedLinodeSettings200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetManagedLinodeSettings200ResponseDataInner:
        """Test GetManagedLinodeSettings200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetManagedLinodeSettings200ResponseDataInner`
        """
        model = GetManagedLinodeSettings200ResponseDataInner()
        if include_optional:
            return GetManagedLinodeSettings200ResponseDataInner(
                group = 'linodes',
                id = 123,
                label = 'linode123',
                ssh = openapi_client.models.get_managed_linode_settings_200_response_data_inner_ssh.get_managed_linode_settings_200_response_data_inner_ssh(
                    access = True, 
                    ip = 'any', 
                    port = 22, 
                    user = 'linode', )
            )
        else:
            return GetManagedLinodeSettings200ResponseDataInner(
        )
        """

    def testGetManagedLinodeSettings200ResponseDataInner(self):
        """Test GetManagedLinodeSettings200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
