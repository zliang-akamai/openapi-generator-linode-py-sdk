# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_managed_contacts200_response_data_inner import GetManagedContacts200ResponseDataInner

class TestGetManagedContacts200ResponseDataInner(unittest.TestCase):
    """GetManagedContacts200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetManagedContacts200ResponseDataInner:
        """Test GetManagedContacts200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetManagedContacts200ResponseDataInner`
        """
        model = GetManagedContacts200ResponseDataInner()
        if include_optional:
            return GetManagedContacts200ResponseDataInner(
                email = 'john.doe@example.org',
                group = 'on-call',
                id = 567,
                name = 'John Doe',
                phone = openapi_client.models.get_managed_contacts_200_response_data_inner_phone.get_managed_contacts_200_response_data_inner_phone(
                    primary = '123-456-7890', 
                    secondary = '', ),
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return GetManagedContacts200ResponseDataInner(
        )
        """

    def testGetManagedContacts200ResponseDataInner(self):
        """Test GetManagedContacts200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
