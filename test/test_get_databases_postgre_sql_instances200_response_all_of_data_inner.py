# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_databases_postgre_sql_instances200_response_all_of_data_inner import GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner

class TestGetDatabasesPostgreSqlInstances200ResponseAllOfDataInner(unittest.TestCase):
    """GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner:
        """Test GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner`
        """
        model = GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner()
        if include_optional:
            return GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner(
                allow_list = ["203.0.113.1/32","192.0.1.0/24"],
                cluster_size = 3,
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                encrypted = False,
                engine = 'postgresql',
                hosts = openapi_client.models.get_databases_postgre_sql_instances_200_response_all_of_data_inner_hosts.get_databases_postgre_sql_instances_200_response_allOf_data_inner_hosts(
                    primary = 'lin-0000-000-pgsql-primary.servers.linodedb.net', 
                    secondary = 'lin-0000-000-pgsql-primary-private.servers.linodedb.net', ),
                id = 123,
                label = 'example-db',
                port = 3306,
                region = 'us-east',
                replication_commit_type = 'local',
                replication_type = 'async',
                ssl_connection = True,
                status = 'active',
                total_disk_size_gb = 15,
                type = 'g6-dedicated-2',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updates = openapi_client.models.get_databases_instances_200_response_all_of_data_inner_updates.get_databases_instances_200_response_allOf_data_inner_updates(
                    day_of_week = 1, 
                    duration = 3, 
                    frequency = 'weekly', 
                    hour_of_day = 0, 
                    week_of_month = 1, ),
                used_disk_size_gb = 2,
                version = '13.2'
            )
        else:
            return GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner(
        )
        """

    def testGetDatabasesPostgreSqlInstances200ResponseAllOfDataInner(self):
        """Test GetDatabasesPostgreSqlInstances200ResponseAllOfDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
