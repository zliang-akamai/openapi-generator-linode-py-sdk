# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_linode_disks200_response import GetLinodeDisks200Response

class TestGetLinodeDisks200Response(unittest.TestCase):
    """GetLinodeDisks200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetLinodeDisks200Response:
        """Test GetLinodeDisks200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetLinodeDisks200Response`
        """
        model = GetLinodeDisks200Response()
        if include_optional:
            return GetLinodeDisks200Response(
                data = [
                    openapi_client.models.get_linode_disks_200_response_data_inner.get_linode_disks_200_response_data_inner(
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        disk_encryption = 'enabled', 
                        filesystem = 'ext4', 
                        id = 25674, 
                        label = 'Debian 9 Disk', 
                        size = 48640, 
                        status = 'ready', 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                page = 1,
                pages = 1,
                results = 1
            )
        else:
            return GetLinodeDisks200Response(
        )
        """

    def testGetLinodeDisks200Response(self):
        """Test GetLinodeDisks200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
