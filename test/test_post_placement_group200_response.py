# coding: utf-8

"""
    Linode API

    [Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

    The version of the OpenAPI document: 4.189.2
    Contact: support@linode.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.post_placement_group200_response import PostPlacementGroup200Response

class TestPostPlacementGroup200Response(unittest.TestCase):
    """PostPlacementGroup200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostPlacementGroup200Response:
        """Test PostPlacementGroup200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostPlacementGroup200Response`
        """
        model = PostPlacementGroup200Response()
        if include_optional:
            return PostPlacementGroup200Response(
                id = 528,
                is_compliant = True,
                label = 'PG_Miami_failover',
                members = [
                    openapi_client.models.get_placement_groups_200_response_data_inner_members_inner.get_placement_groups_200_response_data_inner_members_inner(
                        is_compliant = True, 
                        linode_id = 123, )
                    ],
                placement_group_policy = 'strict',
                placement_group_type = 'anti-affinity:local',
                region = 'us-mia'
            )
        else:
            return PostPlacementGroup200Response(
        )
        """

    def testPostPlacementGroup200Response(self):
        """Test PostPlacementGroup200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
